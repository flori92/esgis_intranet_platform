#!/bin/bash

# Script de configuration de Supabase pour la plateforme d'examen ESGIS
# Cr√©√© le 2 mai 2025

echo "üîß Configuration de Supabase pour la plateforme d'examen ESGIS"
echo "------------------------------------------------------------"

# Configuration
SUPABASE_URL="https://epnhnjkbxgciojevrwfq.supabase.co"
SUPABASE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVwbmhuamtieGdjaW9qZXZyd2ZxIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0NjIwNjkwNiwiZXhwIjoyMDYxNzgyOTA2fQ.kbEs9bN0vpsf9cE8TZuj0-sBz6LCQ3o3LU0sptEx-mY"
SUPABASE_DB_PASSWORD="Apollonf@vi92"
SUPABASE_DB_HOST="db.epnhnjkbxgciojevrwfq.supabase.co"
SUPABASE_DB_PORT="5432"
SUPABASE_DB_NAME="postgres"
SUPABASE_DB_USER="postgres"
SQL_FILE="create_supabase_tables.sql"

# V√©rification de l'installation de curl
if ! command -v curl &> /dev/null; then
    echo "‚ùå curl n'est pas install√©. Veuillez l'installer pour continuer."
    exit 1
fi

# V√©rification du fichier SQL
if [ ! -f "$SQL_FILE" ]; then
    echo "‚ùå Fichier SQL '$SQL_FILE' non trouv√© dans le r√©pertoire courant."
    exit 1
fi

# V√©rification de l'installation de psql pour la connexion directe
HAS_PSQL=false
if command -v psql &> /dev/null; then
    HAS_PSQL=true
    echo "‚úÖ PostgreSQL client (psql) d√©tect√© - connexion directe possible"
else
    echo "‚ö†Ô∏è PostgreSQL client (psql) non d√©tect√© - utilisation de l'API REST uniquement"
fi

echo "üìã Cr√©ation de la table quiz_results..."

# M√©thode 1: Ex√©cution via psql si disponible
if [ "$HAS_PSQL" = true ]; then
    echo "üîÑ Tentative de connexion directe √† PostgreSQL..."
    
    # Cr√©ation d'un fichier temporaire pour les informations de connexion
    PGPASS_FILE=$(mktemp)
    echo "$SUPABASE_DB_HOST:$SUPABASE_DB_PORT:$SUPABASE_DB_NAME:$SUPABASE_DB_USER:$SUPABASE_DB_PASSWORD" > "$PGPASS_FILE"
    chmod 600 "$PGPASS_FILE"
    
    # Ex√©cution du script SQL via psql
    PGPASSFILE="$PGPASS_FILE" psql -h "$SUPABASE_DB_HOST" -p "$SUPABASE_DB_PORT" -d "$SUPABASE_DB_NAME" -U "$SUPABASE_DB_USER" -f "$SQL_FILE"
    PSQL_RESULT=$?
    
    # Nettoyage du fichier temporaire
    rm "$PGPASS_FILE"
    
    if [ $PSQL_RESULT -eq 0 ]; then
        echo "‚úÖ Ex√©cution SQL r√©ussie via connexion directe PostgreSQL!"
    else
        echo "‚ö†Ô∏è √âchec de l'ex√©cution SQL via PostgreSQL, tentative via l'API REST..."
        USE_REST_API=true
    fi
else
    USE_REST_API=true
fi

# M√©thode 2: Ex√©cution via l'API REST si psql n'est pas disponible ou a √©chou√©
if [ "$USE_REST_API" = true ]; then
    echo "üîÑ Ex√©cution du script SQL via l'API REST Supabase..."
    SQL_CONTENT=$(cat "$SQL_FILE")

    # Ex√©cution du script SQL via l'API REST de Supabase
    RESPONSE=$(curl -s -X POST "$SUPABASE_URL/rest/v1/rpc/exec_sql" \
        -H "apikey: $SUPABASE_KEY" \
        -H "Authorization: Bearer $SUPABASE_KEY" \
        -H "Content-Type: application/json" \
        -d "{\"query\": \"$SQL_CONTENT\"}")

    # V√©rification de la r√©ponse
    if echo "$RESPONSE" | grep -q "error"; then
        echo "‚ùå Erreur lors de l'ex√©cution du script SQL via l'API REST:"
        echo "$RESPONSE"
        exit 1
    else
        echo "‚úÖ Table quiz_results cr√©√©e avec succ√®s via l'API REST!"
    fi
fi

echo "üîÑ Configuration des r√®gles CORS..."
# Configuration des r√®gles CORS pour permettre l'acc√®s depuis n'importe quelle origine
CORS_RESPONSE=$(curl -s -X PUT "$SUPABASE_URL/rest/v1/" \
    -H "apikey: $SUPABASE_KEY" \
    -H "Authorization: Bearer $SUPABASE_KEY" \
    -H "Content-Type: application/json" \
    -d "{\"config\": {\"cors\": {\"allowed_origins\": [\"*\"]}}}")

if echo "$CORS_RESPONSE" | grep -q "error"; then
    echo "‚ö†Ô∏è Avertissement: Impossible de configurer les r√®gles CORS via l'API."
    echo "   Veuillez les configurer manuellement dans l'interface Supabase:"
    echo "   1. Allez √† https://epnhnjkbxgciojevrwfq.supabase.co/project/settings/api"
    echo "   2. Dans la section 'API Settings', configurez 'Allow-Origin' sur '*'"
else
    echo "‚úÖ R√®gles CORS configur√©es avec succ√®s!"
fi

echo "üîî Activation des notifications temps r√©el..."
# Activation des notifications temps r√©el pour la table quiz_results
REALTIME_RESPONSE=$(curl -s -X POST "$SUPABASE_URL/rest/v1/rpc/enable_realtime" \
    -H "apikey: $SUPABASE_KEY" \
    -H "Authorization: Bearer $SUPABASE_KEY" \
    -H "Content-Type: application/json" \
    -d "{\"table\": \"quiz_results\"}")

if echo "$REALTIME_RESPONSE" | grep -q "error"; then
    echo "‚ö†Ô∏è Avertissement: Impossible d'activer les notifications temps r√©el via l'API."
    echo "   Veuillez les activer manuellement dans l'interface Supabase:"
    echo "   1. Allez √† https://epnhnjkbxgciojevrwfq.supabase.co/project/database/replication"
    echo "   2. Activez la r√©plication pour la table 'quiz_results'"
else
    echo "‚úÖ Notifications temps r√©el activ√©es avec succ√®s!"
fi

echo "------------------------------------------------------------"
echo "‚úÖ Configuration Supabase termin√©e!"
echo "üåê URL Supabase: $SUPABASE_URL"
echo "üóÑÔ∏è Base de donn√©es PostgreSQL: $SUPABASE_DB_HOST:$SUPABASE_DB_PORT"
echo "üë§ Utilisateur PostgreSQL: $SUPABASE_DB_USER"
echo ""
echo "üìù Informations de connexion √† la base de donn√©es:"
echo "   Host: $SUPABASE_DB_HOST"
echo "   Port: $SUPABASE_DB_PORT"
echo "   Database: $SUPABASE_DB_NAME"
echo "   User: $SUPABASE_DB_USER"
echo "   Password: $SUPABASE_DB_PASSWORD"
echo ""
echo "üìù Note: V√©rifiez que tout fonctionne en testant l'application."
echo "------------------------------------------------------------"

{"version":3,"file":"index-BiEXmQ4V.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/context/AuthContext.tsx","../../src/components/Login.tsx","../../src/types/index.ts","../../src/data/questions.ts","../../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../../node_modules/@emailjs/browser/es/store/store.js","../../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../../node_modules/@emailjs/browser/es/methods/init/init.js","../../node_modules/@emailjs/browser/es/api/sendPost.js","../../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","../../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../../node_modules/@emailjs/browser/es/methods/send/send.js","../../node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js","../../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../../node_modules/@emailjs/browser/es/index.js","../../src/context/QuizContext.tsx","../../src/components/QuestionCard.tsx","../../src/components/QuizNavigation.tsx","../../src/components/QuizResults.tsx","../../src/components/Quiz.tsx","../../node_modules/lucide-react/dist/esm/defaultAttributes.js","../../node_modules/lucide-react/dist/esm/createLucideIcon.js","../../node_modules/lucide-react/dist/esm/icons/clock.js","../../src/components/AdminDashboard.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\nimport { Student, AppState } from \"../types\";\nimport { toast } from 'react-hot-toast';\n\n// Déclaration pour TypeScript - permet d'accéder à window.supabase\ndeclare global {\n  interface Window {\n    supabase: SupabaseClient;\n  }\n}\n\n// Types Supabase simplifiés\ninterface SupabaseClient {\n  supabaseUrl: string;\n  supabaseKey: string;\n  from: (table: string) => SupabaseTable;\n  rpc: (fn: string, params: Record<string, unknown>) => Promise<SupabaseResponse>;\n  channel: (channel: string) => SupabaseChannel;\n}\n\ninterface SupabaseTable {\n  select: (columns?: string) => SupabaseQuery;\n  insert: (data: Record<string, unknown>) => Promise<SupabaseResponse>;\n  update: (data: Record<string, unknown>) => SupabaseQuery;\n}\n\ninterface SupabaseQuery {\n  select: (columns?: string) => SupabaseQuery;\n  eq: (column: string, value: string | number) => SupabaseQuery;\n  single: () => Promise<SupabaseResponse>;\n  maybeSingle: () => Promise<SupabaseResponse>;\n  limit: (count: number) => Promise<SupabaseResponse>;\n  order: (column: string, options?: { ascending: boolean }) => SupabaseQuery;\n}\n\ninterface SupabaseResponse {\n  data: unknown;\n  error: SupabaseError | null;\n}\n\ninterface SupabaseError {\n  code: string;\n  message: string;\n  status?: number;\n}\n\ninterface SupabaseChannel {\n  on: (event: string, callback: (payload: unknown) => void) => SupabaseChannel;\n  subscribe: () => SupabaseChannel;\n  unsubscribe: () => void;\n}\n\n// Interface pour les données d'étudiant actif\ninterface ActiveStudentData {\n  student_id: string;\n  student_name: string;\n  status: string;\n  cheating_attempts: number;\n  connected_at: string;\n  last_activity: string;\n  has_completed?: boolean;\n}\n\ninterface AuthContextType {\n  appState: AppState;\n  login: (name: string, isAdmin?: boolean) => Promise<boolean>;\n  logout: () => Promise<void>;\n}\n\nconst defaultState: AppState = {\n  currentUser: null,\n  isAdmin: false,\n  isAuthenticated: false\n};\n\n// Store completed quiz names to prevent retakes (fallback local storage)\nconst completedQuizzes = new Set<string>();\n\n// Stockage local des étudiants actifs (fallback si Supabase échoue)\ninterface ActiveStudent {\n  student_id: string;\n  student_name: string;\n  status: 'connected' | 'in_progress' | 'completed';\n  cheating_attempts: number;\n  connected_at: string;\n  last_activity: string;\n  has_completed?: boolean;\n}\n\nconst activeStudents: Record<string, ActiveStudent> = {};\n\nconst AuthContext = createContext<AuthContextType>({\n  appState: defaultState,\n  login: async () => false,\n  logout: async () => {}\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [appState, setAppState] = useState<AppState>(defaultState);\n  const [supabaseAvailable, setSupabaseAvailable] = useState<boolean>(true);\n  \n  // Référence au client Supabase initialisé dans index.html\n  const supabase = window.supabase;\n  \n  // Vérifier si Supabase est disponible au chargement\n  useEffect(() => {\n    const checkSupabaseConnection = async () => {\n      try {\n        // Tenter une requête simple pour vérifier la connexion\n        const response = await supabase\n          .from('active_students')\n          .select('*')\n          .limit(1);\n          \n        if (response.error) {\n          console.warn('Problème de connexion à Supabase:', response.error);\n          setSupabaseAvailable(false);\n        } else {\n          console.log('Connexion à Supabase établie');\n          setSupabaseAvailable(true);\n        }\n      } catch (err) {\n        console.error('Erreur lors de la vérification de la connexion Supabase:', err);\n        setSupabaseAvailable(false);\n      }\n    };\n    \n    checkSupabaseConnection();\n  }, [supabase]);\n\n  // Fonction pour vérifier si un étudiant a déjà terminé l'examen\n  const checkIfStudentHasCompleted = async (studentName: string): Promise<boolean> => {\n    // Vérifier d'abord dans le stockage local (fallback)\n    if (completedQuizzes.has(studentName.toLowerCase())) {\n      return true;\n    }\n    \n    // Si Supabase n'est pas disponible, utiliser uniquement le stockage local\n    if (!supabaseAvailable) {\n      return false;\n    }\n    \n    try {\n      // Vérifier dans Supabase si l'étudiant a déjà terminé l'examen\n      const { data, error } = await supabase\n        .from('active_students')\n        .select('has_completed')\n        .eq('student_name', studentName)\n        .maybeSingle();\n      \n      if (error) {\n        console.error('Erreur lors de la vérification du statut de l\\'étudiant:', error);\n        return false;\n      }\n      \n      const studentData = data as ActiveStudentData | null;\n      \n      // Si l'étudiant existe et a déjà terminé, ajouter au stockage local\n      if (studentData && studentData.has_completed) {\n        completedQuizzes.add(studentName.toLowerCase());\n        return true;\n      }\n      \n      return false;\n    } catch (error) {\n      console.error('Erreur lors de la vérification du statut de l\\'étudiant:', error);\n      return false;\n    }\n  };\n\n  // Fonction pour enregistrer un étudiant dans Supabase ou localement\n  const registerStudentInSupabase = async (student: Student, isAdmin: boolean) => {\n    if (isAdmin) return; // Ne pas enregistrer les administrateurs\n    \n    // Enregistrer localement en premier (fallback)\n    activeStudents[student.id] = {\n      student_id: student.id,\n      student_name: student.name,\n      status: 'connected',\n      cheating_attempts: 0,\n      connected_at: new Date().toISOString(),\n      last_activity: new Date().toISOString(),\n      has_completed: false\n    };\n    \n    // Si Supabase n'est pas disponible, ne pas essayer d'y accéder\n    if (!supabaseAvailable) {\n      console.log(`Étudiant ${student.name} enregistré localement (Supabase non disponible)`);\n      return;\n    }\n    \n    try {\n      // Vérifier si l'étudiant est déjà connecté\n      const { data, error } = await supabase\n        .from('active_students')\n        .select('*')\n        .eq('student_name', student.name)\n        .maybeSingle();\n        \n      if (error && error.code !== 'PGRST116') { // PGRST116 = no rows returned\n        console.error('Erreur lors de la vérification de l\\'étudiant:', error);\n        return;\n      }\n      \n      const studentData = data as ActiveStudentData | null;\n      \n      if (studentData) {\n        // Mettre à jour l'entrée existante\n        const updateResponse = await supabase\n          .from('active_students')\n          .update({\n            status: 'connected',\n            last_activity: new Date().toISOString()\n          })\n          .eq('student_id', studentData.student_id)\n          .single();\n          \n        if (updateResponse.error) {\n          console.error('Erreur lors de la mise à jour de l\\'étudiant:', updateResponse.error);\n          return;\n        }\n          \n        console.log(`Étudiant ${student.name} mis à jour dans Supabase`);\n      } else {\n        // Créer une nouvelle entrée\n        const insertResponse = await supabase\n          .from('active_students')\n          .insert({\n            student_id: student.id,\n            student_name: student.name,\n            status: 'connected',\n            cheating_attempts: 0,\n            connected_at: new Date().toISOString(),\n            last_activity: new Date().toISOString(),\n            has_completed: false\n          });\n          \n        if (insertResponse.error) {\n          console.error('Erreur lors de l\\'insertion de l\\'étudiant:', insertResponse.error);\n          return;\n        }\n        \n        console.log(`Étudiant ${student.name} enregistré dans Supabase`);\n      }\n    } catch (error) {\n      console.error('Erreur lors de l\\'enregistrement de l\\'étudiant dans Supabase:', error);\n    }\n  };\n\n  // Fonction pour mettre à jour le statut d'un étudiant dans Supabase\n  const updateStudentStatus = async (student: Student, status: string, hasCompleted = false) => {\n    if (!student) return;\n    \n    // Mettre à jour localement en premier (fallback)\n    if (activeStudents[student.id]) {\n      activeStudents[student.id].status = status as 'connected' | 'in_progress' | 'completed';\n      activeStudents[student.id].last_activity = new Date().toISOString();\n      activeStudents[student.id].has_completed = hasCompleted;\n    }\n    \n    // Si Supabase n'est pas disponible, ne pas essayer d'y accéder\n    if (!supabaseAvailable) {\n      console.log(`Statut de l'étudiant ${student.name} mis à jour localement: ${status}`);\n      return;\n    }\n    \n    try {\n      const updateResponse = await supabase\n        .from('active_students')\n        .update({\n          status,\n          last_activity: new Date().toISOString(),\n          has_completed: hasCompleted\n        })\n        .eq('student_id', student.id)\n        .single();\n        \n      if (updateResponse.error) {\n        console.error('Erreur lors de la mise à jour du statut:', updateResponse.error);\n        return;\n      }\n        \n      console.log(`Statut de l'étudiant ${student.name} mis à jour: ${status}`);\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du statut de l\\'étudiant:', error);\n    }\n  };\n\n  // Mettre à jour le statut de l'étudiant lorsque l'état de l'application change\n  useEffect(() => {\n    if (!appState.isAuthenticated) return;\n    \n    const updateStatus = async () => {\n      if (appState.currentUser && !appState.isAdmin) {\n        // Mettre à jour le statut de l'étudiant\n        await updateStudentStatus(appState.currentUser, 'in_progress');\n      }\n    };\n    \n    updateStatus();\n    \n    // Nous désactivons l'avertissement ESLint car updateStudentStatus dépend de supabase et supabaseAvailable\n    // qui ne changent pas souvent, et nous ne voulons pas recréer la fonction à chaque rendu\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [appState.isAuthenticated, appState.currentUser, appState.isAdmin]);\n\n  const login = async (name: string, isAdmin = false): Promise<boolean> => {\n    const trimmedName = name.trim();\n    \n    // Vérifier si l'utilisateur a déjà passé l'examen\n    if (!isAdmin) {\n      const hasCompleted = await checkIfStudentHasCompleted(trimmedName);\n      if (hasCompleted) {\n        toast.error(\"Vous avez déjà passé cette évaluation. Vous ne pouvez pas la repasser.\");\n        return false;\n      }\n    }\n\n    const student: Student = {\n      id: Date.now().toString(),\n      name: trimmedName\n    };\n\n    // Enregistrer l'étudiant dans Supabase ou localement\n    await registerStudentInSupabase(student, isAdmin);\n\n    setAppState({\n      currentUser: student,\n      isAdmin,\n      isAuthenticated: true\n    });\n    \n    return true;\n  };\n\n  const logout = async () => {\n    try {\n      // Add the user to completed quizzes when they logout after completing\n      if (appState.currentUser && !appState.isAdmin) {\n        completedQuizzes.add(appState.currentUser.name.toLowerCase());\n        \n        // Mettre à jour le statut de l'étudiant dans Supabase\n        await updateStudentStatus(appState.currentUser, 'completed', true);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la déconnexion:', error);\n    } finally {\n      setAppState(defaultState);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ appState, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};","import React, { useState } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport toast from \"react-hot-toast\";\n\nconst Login: React.FC = () => {\n  const [name, setName] = useState(\"\");\n  const [adminCode, setAdminCode] = useState(\"\");\n  const [showAdminField, setShowAdminField] = useState(false);\n  const { login } = useAuth();\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (name.trim()) {\n      const success = login(name, adminCode === \"admin123\"); // Simple admin code for demo\n      if (success) {\n        setName(\"\");\n        setAdminCode(\"\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">ESGIS Exam Platform</h1>\n          <p className=\"text-gray-600\">Virtualization Cloud & Datacenter Advanced</p>\n        </div>\n        \n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div>\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Nom complet\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              placeholder=\"Entrez votre nom complet\"\n              required\n            />\n          </div>\n          \n          <div className=\"flex items-center\">\n            <input\n              id=\"admin-toggle\"\n              type=\"checkbox\"\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n              checked={showAdminField}\n              onChange={() => setShowAdminField(!showAdminField)}\n            />\n            <label htmlFor=\"admin-toggle\" className=\"ml-2 block text-sm text-gray-700\">\n              Je suis un administrateur\n            </label>\n          </div>\n          \n          {showAdminField && (\n            <div>\n              <label htmlFor=\"adminCode\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Code administrateur\n              </label>\n              <input\n                type=\"password\"\n                id=\"adminCode\"\n                value={adminCode}\n                onChange={(e) => setAdminCode(e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                placeholder=\"Entrez le code administrateur\"\n              />\n            </div>\n          )}\n          \n          <div>\n            <button\n              type=\"submit\"\n              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200\"\n            >\n              Se connecter\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;","export interface Question {\n  id: string;\n  text: string;\n  options: string[];\n  correctAnswer: number;\n}\n\nexport interface Student {\n  id: string;\n  name: string;\n  email?: string;\n}\n\nexport interface QuizResult {\n  studentId: string;\n  studentName: string;\n  score: number;\n  maxScore: number;\n  answers: Record<string, number>;\n  cheatingAttempts: number;\n  completedAt: string;\n}\n\nexport interface AppState {\n  currentUser: Student | null;\n  isAdmin: boolean;\n  isAuthenticated: boolean;\n}\n\nexport enum QuizStatus {\n  NOT_STARTED = \"NOT_STARTED\",\n  IN_PROGRESS = \"IN_PROGRESS\",\n  COMPLETED = \"COMPLETED\"\n}\n\nexport interface Timer {\n  minutes: number;\n  seconds: number;\n}","import { Question } from \"../types\";\n\n// Questions complètes pour le cours de virtualisation cloud et datacenter\nexport const questions: Question[] = [\n  {\n    id: \"q1\",\n    text: \"Quelle technologie permet d'exécuter plusieurs systèmes d'exploitation sur une même machine physique ?\",\n    options: [\n      \"L'émulation\",\n      \"La virtualisation\",\n      \"La containerisation\",\n      \"Le clustering\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q2\",\n    text: \"Quel composant logiciel permet de créer et de gérer des machines virtuelles ?\",\n    options: [\n      \"Container Engine\",\n      \"Broker d'API\",\n      \"Hyperviseur\",\n      \"Orchestrateur\"\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: \"q3\",\n    text: \"Qu'est-ce que la virtualisation matérielle assistée ?\",\n    options: [\n      \"Une virtualisation qui ne fonctionne qu'avec du matériel spécifique\",\n      \"Une technique utilisant des extensions du processeur pour accélérer la virtualisation\",\n      \"L'émulation complète du matériel physique\",\n      \"Un type de virtualisation basée uniquement sur des logiciels\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q4\",\n    text: \"Quelle est la principale différence entre un hyperviseur de type 1 et un hyperviseur de type 2 ?\",\n    options: [\n      \"Le type 1 s'exécute directement sur le matériel, le type 2 sur un système d'exploitation hôte\",\n      \"Le type 1 est open source, le type 2 est propriétaire\",\n      \"Le type 1 supporte uniquement Linux, le type 2 est multi-plateforme\",\n      \"Le type 1 est plus ancien que le type 2\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q5\",\n    text: \"Qu'est-ce que la migration à chaud (live migration) d'une machine virtuelle ?\",\n    options: [\n      \"Le déplacement d'une VM d'un hôte à un autre sans interruption de service\",\n      \"La sauvegarde à chaud des données d'une VM\",\n      \"L'ajout de ressources à une VM pendant son fonctionnement\",\n      \"Le redimensionnement automatique d'une VM selon sa charge\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q6\",\n    text: \"Quel modèle de service cloud fournit uniquement l'infrastructure de calcul, réseau et stockage ?\",\n    options: [\n      \"SaaS\",\n      \"PaaS\",\n      \"IaaS\",\n      \"FaaS\"\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: \"q7\",\n    text: \"Quelle caractéristique du cloud computing permet aux utilisateurs de payer uniquement pour les ressources qu'ils consomment ?\",\n    options: [\n      \"Multi-tenancy\",\n      \"Elasticité\",\n      \"Pay-as-you-go\",\n      \"Self-service\"\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: \"q8\",\n    text: \"Quel type de cloud est utilisé exclusivement par une seule organisation ?\",\n    options: [\n      \"Cloud public\",\n      \"Cloud privé\",\n      \"Cloud hybride\",\n      \"Cloud communautaire\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q9\",\n    text: \"Qu'est-ce que le 'cloud bursting' ?\",\n    options: [\n      \"Une faille de sécurité dans le cloud\",\n      \"Une technique permettant d'utiliser des ressources cloud publiques lorsque le cloud privé atteint sa capacité maximale\",\n      \"Une méthode de compression des données dans le cloud\",\n      \"Une technologie de diffusion de contenu\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q10\",\n    text: \"Quel service d'AWS fournit des machines virtuelles ?\",\n    options: [\n      \"S3\",\n      \"EC2\",\n      \"RDS\",\n      \"Lambda\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q11\",\n    text: \"Quelle commande Docker permet de créer et démarrer un conteneur en mode détaché ?\",\n    options: [\n      \"docker run -d\",\n      \"docker start --background\",\n      \"docker create --detach\",\n      \"docker launch -bg\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q12\",\n    text: \"Quelle est la principale différence entre une machine virtuelle et un conteneur ?\",\n    options: [\n      \"Les conteneurs partagent le même noyau OS que l'hôte\",\n      \"Les conteneurs sont toujours plus rapides que les VMs\",\n      \"Les VMs ne peuvent exécuter qu'un seul processus\",\n      \"Les conteneurs nécessitent plus de ressources que les VMs\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q13\",\n    text: \"Quel fichier est utilisé pour définir la construction d'une image Docker ?\",\n    options: [\n      \"docker-compose.yml\",\n      \"Containerfile\",\n      \"Dockerfile\",\n      \"image.conf\"\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: \"q14\",\n    text: \"Qu'est-ce qu'un registre de conteneurs ?\",\n    options: [\n      \"Un service qui stocke et distribue des images de conteneurs\",\n      \"Un outil qui surveille les conteneurs en cours d'exécution\",\n      \"Une base de données qui garde une trace des performances des conteneurs\",\n      \"Un service qui génère des rapports sur l'utilisation des conteneurs\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q15\",\n    text: \"Quelle commande permet de lister tous les conteneurs Docker en cours d'exécution ?\",\n    options: [\n      \"docker ps\",\n      \"docker list\",\n      \"docker show\",\n      \"docker images\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q16\",\n    text: \"Quel est le principal objectif d'un orchestrateur de conteneurs ?\",\n    options: [\n      \"Automatiser le déploiement, la mise à l'échelle et la gestion des applications conteneurisées\",\n      \"Créer des images de conteneurs\",\n      \"Remplacer complètement les VMs traditionnelles\",\n      \"Stocker les données des applications\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q17\",\n    text: \"Qu'est-ce qu'un pod dans Kubernetes ?\",\n    options: [\n      \"Un cluster de nœuds worker\",\n      \"La plus petite unité déployable qui peut contenir un ou plusieurs conteneurs\",\n      \"Un serveur maître qui gère le cluster\",\n      \"Un volume de stockage persistant\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q18\",\n    text: \"Quelle fonction remplit un service dans Kubernetes ?\",\n    options: [\n      \"Il expose une application s'exécutant sur un ensemble de pods\",\n      \"Il fournit une interface graphique pour Kubernetes\",\n      \"Il gère l'authentification des utilisateurs\",\n      \"Il déploie automatiquement les mises à jour logicielles\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q19\",\n    text: \"Comment appelle-t-on un ensemble de pods gérés comme une seule entité qui garantit qu'un nombre spécifié de répliques s'exécute à tout moment ?\",\n    options: [\n      \"StatefulSet\",\n      \"DaemonSet\",\n      \"ReplicaSet\",\n      \"CronJob\"\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: \"q20\",\n    text: \"Qu'est-ce que Helm dans l'écosystème Kubernetes ?\",\n    options: [\n      \"Un gestionnaire de packages pour Kubernetes\",\n      \"Un outil de monitoring\",\n      \"Un service de stockage\",\n      \"Un système d'authentification\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q21\",\n    text: \"Qu'est-ce qu'un cluster informatique ?\",\n    options: [\n      \"Un ensemble de machines travaillant ensemble comme un système unique\",\n      \"Une technique de stockage redondant\",\n      \"Un réseau isolé pour des raisons de sécurité\",\n      \"Un groupement d'utilisateurs ayant les mêmes privilèges\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q22\",\n    text: \"Quel terme désigne la capacité d'un système à continuer à fonctionner en cas de panne d'un composant ?\",\n    options: [\n      \"Élasticité\",\n      \"Scalabilité\",\n      \"Résilience\",\n      \"Consistance\"\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: \"q23\",\n    text: \"Quelle métrique mesure le pourcentage de temps pendant lequel un système est opérationnel ?\",\n    options: [\n      \"Temps moyen entre pannes (MTBF)\",\n      \"Temps moyen de réparation (MTTR)\",\n      \"Disponibilité\",\n      \"Taux de défaillance\"\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: \"q24\",\n    text: \"Qu'est-ce que la répartition de charge (load balancing) ?\",\n    options: [\n      \"La distribution du trafic réseau sur plusieurs serveurs\",\n      \"L'équilibrage des coûts entre différents fournisseurs cloud\",\n      \"La répartition des tâches administratives entre différentes équipes\",\n      \"L'allocation dynamique de la mémoire\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q25\",\n    text: \"Quelle commande Kubernetes permet d'afficher les informations détaillées sur un pod spécifique ?\",\n    options: [\n      \"kubectl inspect pod [nom-du-pod]\",\n      \"kubectl describe pod [nom-du-pod]\",\n      \"kubectl info pod [nom-du-pod]\",\n      \"kubectl show pod [nom-du-pod]\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q26\",\n    text: \"Qu'est-ce que le SDN (Software-Defined Networking) ?\",\n    options: [\n      \"Une approche qui sépare le plan de contrôle du plan de données dans les réseaux\",\n      \"Un protocole de routage spécifique\",\n      \"Un type de firewall virtuel\",\n      \"Un système d'exploitation réseau\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q27\",\n    text: \"Qu'est-ce qu'un réseau overlay ?\",\n    options: [\n      \"Un réseau virtuel construit par-dessus un réseau physique existant\",\n      \"Un réseau physique redondant\",\n      \"Un réseau de diffusion de contenu\",\n      \"Un réseau sans fil maillé\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q28\",\n    text: \"Quelle technologie permet la création de réseaux virtuels isolés au sein d'une infrastructure cloud ?\",\n    options: [\n      \"VPN\",\n      \"VPC (Virtual Private Cloud)\",\n      \"VRF (Virtual Routing and Forwarding)\",\n      \"MPLS\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q29\",\n    text: \"Qu'est-ce qu'un NSX dans l'écosystème VMware ?\",\n    options: [\n      \"Une plateforme de virtualisation de serveurs\",\n      \"Une solution de virtualisation du réseau et de la sécurité\",\n      \"Un système de stockage virtuel\",\n      \"Un outil de surveillance des performances\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q30\",\n    text: \"Quel protocole est souvent utilisé pour l'encapsulation du trafic dans les réseaux overlay ?\",\n    options: [\n      \"VXLAN\",\n      \"HTTP\",\n      \"FTP\",\n      \"SMTP\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q31\",\n    text: \"Qu'est-ce que le SAN (Storage Area Network) ?\",\n    options: [\n      \"Un réseau dédié au stockage qui fournit l'accès au stockage au niveau des blocs\",\n      \"Un système de stockage basé sur le cloud\",\n      \"Un dispositif de sauvegarde automatique\",\n      \"Un système de fichiers distribué\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q32\",\n    text: \"Quelle technologie permet de présenter le stockage comme des fichiers partagés sur un réseau ?\",\n    options: [\n      \"SAN\",\n      \"NAS (Network Attached Storage)\",\n      \"DAS (Direct Attached Storage)\",\n      \"Object Storage\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q33\",\n    text: \"Qu'est-ce que le thin provisioning ?\",\n    options: [\n      \"L'allocation dynamique d'espace de stockage selon les besoins réels\",\n      \"Un type de compression de données\",\n      \"Une technique de chiffrement du stockage\",\n      \"Un système de quotas pour limiter l'utilisation\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q34\",\n    text: \"Quelle commande Docker permet de lister les volumes disponibles ?\",\n    options: [\n      \"docker volume ls\",\n      \"docker ls volumes\",\n      \"docker show volumes\",\n      \"docker volumes list\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q35\",\n    text: \"Qu'est-ce qu'un volume persistant dans Kubernetes ?\",\n    options: [\n      \"Un composant de cluster qui gère l'authentification\",\n      \"Une ressource de stockage qui existe indépendamment du cycle de vie des pods\",\n      \"Un nœud spécialisé dans le stockage de données\",\n      \"Un système de journalisation persistant\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q36\",\n    text: \"Qu'est-ce que l'isolation des ressources dans un environnement virtualisé ?\",\n    options: [\n      \"La séparation physique des serveurs\",\n      \"L'assurance que les VMs ou conteneurs ne peuvent pas accéder aux ressources des autres\",\n      \"Le chiffrement complet des données\",\n      \"La restriction d'accès Internet pour les VMs\"\n    ],\n    correctAnswer: 1\n  },\n  {\n    id: \"q37\",\n    text: \"Quelle commande Kubernetes permet de créer un objet à partir d'un fichier YAML ?\",\n    options: [\n      \"kubectl generate -f fichier.yaml\",\n      \"kubectl create -f fichier.yaml\",\n      \"kubectl apply -f fichier.yaml\",\n      \"kubernetes start -f fichier.yaml\"\n    ],\n    correctAnswer: 2\n  },\n  {\n    id: \"q38\",\n    text: \"Qu'est-ce qu'une politique de sécurité réseau dans Kubernetes ?\",\n    options: [\n      \"Une règle qui spécifie les communications réseau autorisées entre les pods\",\n      \"Un document de conformité obligatoire\",\n      \"Un protocole de chiffrement pour les communications inter-clusters\",\n      \"Un système d'authentification pour l'accès aux nœuds\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q39\",\n    text: \"Qu'est-ce que le principe du moindre privilège dans un contexte cloud ?\",\n    options: [\n      \"Octroyer uniquement les droits minimums nécessaires pour accomplir une tâche\",\n      \"Utiliser le cloud le moins cher possible\",\n      \"Minimiser le nombre d'applications déployées\",\n      \"Réduire la consommation d'énergie des datacenters\"\n    ],\n    correctAnswer: 0\n  },\n  {\n    id: \"q40\",\n    text: \"Quelle commande Docker permet d'inspecter les métadonnées et configurations d'un conteneur ?\",\n    options: [\n      \"docker show\",\n      \"docker inspect\",\n      \"docker analyze\",\n      \"docker metadata\"\n    ],\n    correctAnswer: 1\n  }\n];\n\n// Fonction pour obtenir les questions dans un ordre aléatoire\nexport const getRandomizedQuestions = (): Question[] => {\n  // Créer une copie du tableau de questions\n  const shuffledQuestions = [...questions];\n  \n  // Algorithme de mélange Fisher-Yates\n  for (let i = shuffledQuestions.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffledQuestions[i], shuffledQuestions[j]] = [shuffledQuestions[j], shuffledQuestions[i]];\n  }\n  \n  return shuffledQuestions;\n};","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\nimport { Question, QuizResult, QuizStatus, Timer } from \"../types\";\nimport { getRandomizedQuestions } from \"../data/questions\";\nimport { useAuth } from \"./AuthContext\";\nimport emailjs from '@emailjs/browser';\nimport toast from 'react-hot-toast';\n\n// Déclaration pour TypeScript - permet d'accéder à window.supabase\ndeclare global {\n  interface Window {\n    supabase: any;\n  }\n}\n\ninterface QuizContextType {\n  questions: Question[];\n  currentQuestionIndex: number;\n  userAnswers: Record<string, number>;\n  quizStatus: QuizStatus;\n  cheatingAttempts: number;\n  timer: Timer;\n  startQuiz: () => void;\n  endQuiz: () => void;\n  answerQuestion: (questionId: string, answerIndex: number) => void;\n  goToNextQuestion: () => void;\n  goToPreviousQuestion: () => void;\n  calculateScore: () => number;\n  reportCheatingAttempt: () => void;\n  quizResults: QuizResult[];\n}\n\nconst QuizContext = createContext<QuizContextType>({\n  questions: [],\n  currentQuestionIndex: 0,\n  userAnswers: {},\n  quizStatus: QuizStatus.NOT_STARTED,\n  cheatingAttempts: 0,\n  timer: { minutes: 120, seconds: 0 },\n  startQuiz: () => {},\n  endQuiz: () => {},\n  answerQuestion: () => {},\n  goToNextQuestion: () => {},\n  goToPreviousQuestion: () => {},\n  calculateScore: () => 0,\n  reportCheatingAttempt: () => {},\n  quizResults: []\n});\n\nexport const useQuiz = () => useContext(QuizContext);\n\ninterface QuizProviderProps {\n  children: ReactNode;\n}\n\n// Initialize EmailJS with your public key\nemailjs.init(\"MZdbJf09JZqvMG5M_\");\n\nexport const QuizProvider: React.FC<QuizProviderProps> = ({ children }: QuizProviderProps) => {\n  const { appState } = useAuth();\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<Record<string, number>>({});\n  const [quizStatus, setQuizStatus] = useState<QuizStatus>(QuizStatus.NOT_STARTED);\n  const [cheatingAttempts, setCheatingAttempts] = useState(0);\n  const [quizResults, setQuizResults] = useState<QuizResult[]>([]);\n  const [timer, setTimer] = useState<Timer>({ minutes: 120, seconds: 0 });\n  \n  // Référence au client Supabase initialisé dans index.html\n  const supabase = window.supabase;\n\n  // Récupération des résultats depuis Supabase au chargement\n  useEffect(() => {\n    const fetchQuizResults = async () => {\n      try {\n        const { data, error } = await supabase\n          .from('quiz_results')\n          .select('*');\n          \n        if (error) {\n          console.error('Erreur lors de la récupération des résultats:', error);\n          toast.error('Erreur lors de la récupération des résultats');\n          return;\n        }\n        \n        if (data) {\n          setQuizResults(data);\n        }\n      } catch (err) {\n        console.error('Erreur inattendue:', err);\n        toast.error('Erreur lors de la récupération des résultats');\n      }\n    };\n    \n    fetchQuizResults();\n  }, []);\n\n  const sendEmailNotification = async (result: QuizResult) => {\n    try {\n      const templateParams = {\n        to_email: 'florifavi@gmail.com',\n        student_name: result.studentName,\n        score: result.score.toFixed(1),\n        max_score: result.maxScore,\n        percentage: ((result.score / result.maxScore) * 100).toFixed(1),\n        cheating_attempts: result.cheatingAttempts,\n        completion_date: new Date(result.completedAt).toLocaleString(),\n      };\n\n      await emailjs.send(\n        'service_default',\n        'template_default',\n        templateParams\n      );\n\n      toast.success('Résultats envoyés à l\\'administrateur');\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi de l\\'email:', error);\n      toast.error('Erreur lors de l\\'envoi des résultats');\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    let interval: ReturnType<typeof setInterval>;\n\n    if (quizStatus === QuizStatus.IN_PROGRESS && timer.minutes >= 0) {\n      interval = setInterval(() => {\n        setTimer((prevTimer: Timer) => {\n          if (prevTimer.minutes === 0 && prevTimer.seconds === 0) {\n            clearInterval(interval);\n            endQuiz();\n            return prevTimer;\n          }\n\n          if (prevTimer.seconds === 0) {\n            return {\n              minutes: prevTimer.minutes - 1,\n              seconds: 59\n            };\n          }\n\n          return {\n            minutes: prevTimer.minutes,\n            seconds: prevTimer.seconds - 1\n          };\n        });\n      }, 1000);\n    }\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [quizStatus, timer]);\n\n  const startQuiz = () => {\n    const randomizedQuestions = getRandomizedQuestions();\n    setQuestions(randomizedQuestions);\n    setUserAnswers({});\n    setCurrentQuestionIndex(0);\n    setCheatingAttempts(0);\n    setTimer({ minutes: 120, seconds: 0 });\n    setQuizStatus(QuizStatus.IN_PROGRESS);\n  };\n\n  const endQuiz = () => {\n    if (appState.currentUser && quizStatus === QuizStatus.IN_PROGRESS) {\n      const score = calculateScore();\n      const result: QuizResult = {\n        studentId: appState.currentUser.id,\n        studentName: appState.currentUser.name,\n        score,\n        maxScore: questions.length * 0.5,\n        answers: { ...userAnswers },\n        cheatingAttempts,\n        completedAt: new Date().toISOString()\n      };\n      \n      // Insertion du résultat dans Supabase\n      const insertQuizResult = async () => {\n        try {\n          const { error } = await supabase\n            .from('quiz_results')\n            .insert([result]);\n            \n          if (error) {\n            console.error('Erreur lors de l\\'enregistrement du résultat:', error);\n            toast.error('Erreur lors de l\\'enregistrement du résultat');\n            // Fallback : enregistrement local en cas d'échec\n            setQuizResults((prev: QuizResult[]) => [...prev, result]);\n            return;\n          }\n          \n          toast.success('Résultat enregistré avec succès');\n          // Mise à jour locale pour cohérence de l'UI\n          setQuizResults((prev: QuizResult[]) => [...prev, result]);\n        } catch (err) {\n          console.error('Erreur inattendue:', err);\n          toast.error('Erreur lors de l\\'enregistrement du résultat');\n          // Fallback : enregistrement local en cas d'échec\n          setQuizResults((prev: QuizResult[]) => [...prev, result]);\n        }\n      };\n      \n      insertQuizResult();\n      setQuizStatus(QuizStatus.COMPLETED);\n      \n      // Send email notification with the results\n      sendEmailNotification(result);\n    }\n  };\n\n  const answerQuestion = (questionId: string, answerIndex: number) => {\n    if (quizStatus === QuizStatus.IN_PROGRESS) {\n      setUserAnswers((prev: Record<string, number>) => ({\n        ...prev,\n        [questionId]: answerIndex\n      }));\n    }\n  };\n\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex((prev: number) => prev + 1);\n    }\n  };\n\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex((prev: number) => prev - 1);\n    }\n  };\n\n  const calculateScore = () => {\n    if (questions.length === 0) return 0;\n    \n    let correctAnswers = 0;\n    questions.forEach((question: Question) => {\n      const userAnswer = userAnswers[question.id];\n      if (userAnswer === question.correctAnswer) {\n        correctAnswers++;\n      }\n    });\n    \n    return correctAnswers * 0.5;\n  };\n\n  const reportCheatingAttempt = () => {\n    setCheatingAttempts((prev: number) => prev + 1);\n  };\n\n  return (\n    <QuizContext.Provider value={{\n      questions,\n      currentQuestionIndex,\n      userAnswers,\n      quizStatus,\n      cheatingAttempts,\n      timer,\n      startQuiz,\n      endQuiz,\n      answerQuestion,\n      goToNextQuestion,\n      goToPreviousQuestion,\n      calculateScore,\n      reportCheatingAttempt,\n      quizResults\n    }}>\n      {children}\n    </QuizContext.Provider>\n  );\n};","import React from \"react\";\nimport { Question } from \"../types\";\nimport { useQuiz } from \"../context/QuizContext\";\n\ninterface QuestionCardProps {\n  question: Question;\n}\n\nconst QuestionCard: React.FC<QuestionCardProps> = ({ question }) => {\n  const { userAnswers, answerQuestion } = useQuiz();\n  const selectedAnswer = userAnswers[question.id];\n  \n  const handleOptionSelect = (optionIndex: number) => {\n    answerQuestion(question.id, optionIndex);\n  };\n  \n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">{question.text}</h2>\n      \n      <div className=\"space-y-3\">\n        {question.options.map((option, index) => (\n          <div \n            key={index}\n            className={`p-4 border rounded-md cursor-pointer transition-all duration-200 hover:border-blue-400 ${\n              selectedAnswer === index \n                ? \"border-blue-500 bg-blue-50\" \n                : \"border-gray-300\"\n            }`}\n            onClick={() => handleOptionSelect(index)}\n          >\n            <div className=\"flex items-start\">\n              <div className={`h-5 w-5 rounded-full border mr-3 flex items-center justify-center ${\n                selectedAnswer === index \n                  ? \"border-blue-500 bg-blue-500\" \n                  : \"border-gray-400\"\n              }`}>\n                {selectedAnswer === index && (\n                  <div className=\"h-2 w-2 rounded-full bg-white\"></div>\n                )}\n              </div>\n              <span className=\"text-gray-700\">{option}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionCard;","import React from \"react\";\nimport { useQuiz } from \"../context/QuizContext\";\n\nconst QuizNavigation: React.FC = () => {\n  const { \n    questions, \n    currentQuestionIndex, \n    userAnswers,\n    goToNextQuestion, \n    goToPreviousQuestion,\n    endQuiz\n  } = useQuiz();\n  \n  const isFirstQuestion = currentQuestionIndex === 0;\n  const isLastQuestion = currentQuestionIndex === questions.length - 1;\n  \n  // Calculate progress percentage\n  const progress = questions.length > 0 \n    ? ((Object.keys(userAnswers).length / questions.length) * 100).toFixed(0) \n    : \"0\";\n  \n  return (\n    <div className=\"mt-8\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-sm text-gray-600\">\n          Question {currentQuestionIndex + 1} sur {questions.length}\n        </div>\n        <div className=\"text-sm text-gray-600\">\n          Progression: {progress}%\n        </div>\n      </div>\n      \n      {/* Progress bar */}\n      <div className=\"w-full bg-gray-200 rounded-full h-2.5 mb-6\">\n        <div \n          className=\"bg-blue-600 h-2.5 rounded-full transition-all duration-300 ease-in-out\" \n          style={{ width: `${progress}%` }}\n        ></div>\n      </div>\n      \n      <div className=\"flex justify-between\">\n        <button\n          onClick={goToPreviousQuestion}\n          disabled={isFirstQuestion}\n          className={`px-4 py-2 rounded-md ${\n            isFirstQuestion\n              ? \"bg-gray-300 cursor-not-allowed\"\n              : \"bg-gray-600 hover:bg-gray-700 text-white\"\n          } transition-colors duration-200`}\n        >\n          Précédent\n        </button>\n        \n        {isLastQuestion ? (\n          <button\n            onClick={endQuiz}\n            className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors duration-200\"\n          >\n            Terminer\n          </button>\n        ) : (\n          <button\n            onClick={goToNextQuestion}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors duration-200\"\n          >\n            Suivant\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuizNavigation;","import React from \"react\";\nimport { useQuiz } from \"../context/QuizContext\";\nimport { useAuth } from \"../context/AuthContext\";\n\nconst QuizResults: React.FC = () => {\n  const { questions, userAnswers, calculateScore, cheatingAttempts } = useQuiz();\n  const { appState, logout } = useAuth();\n  \n  const score = calculateScore();\n  const totalPossibleScore = questions.length * 0.5;\n  const percentage = (score / totalPossibleScore) * 100;\n  \n  const correctAnswers = questions.filter(\n    question => userAnswers[question.id] === question.correctAnswer\n  ).length;\n  \n  const getScoreColor = () => {\n    if (percentage >= 80) return \"text-green-600\";\n    if (percentage >= 60) return \"text-yellow-600\";\n    return \"text-red-600\";\n  };\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8 px-4\">\n      <div className=\"max-w-3xl mx-auto bg-white rounded-lg shadow-md overflow-hidden\">\n        <div className=\"p-8\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Résultats du Quiz</h1>\n          \n          <div className=\"mb-8\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <p className=\"text-gray-700\">Étudiant:</p>\n              <p className=\"font-medium\">{appState.currentUser?.name}</p>\n            </div>\n            \n            <div className=\"flex justify-between items-center mb-4\">\n              <p className=\"text-gray-700\">Note finale:</p>\n              <p className={`text-2xl font-bold ${getScoreColor()}`}>\n                {score.toFixed(1)}/20\n              </p>\n            </div>\n            \n            <div className=\"flex justify-between items-center mb-4\">\n              <p className=\"text-gray-700\">Réponses correctes:</p>\n              <p className=\"font-medium\">{correctAnswers} sur {questions.length}</p>\n            </div>\n            \n            {cheatingAttempts > 0 && (\n              <div className=\"flex justify-between items-center mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n                <p className=\"text-red-700\">Tentatives de triche détectées:</p>\n                <p className=\"font-medium text-red-700\">{cheatingAttempts}</p>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"w-full bg-gray-200 rounded-full h-4 mb-6\">\n            <div \n              className={`h-4 rounded-full ${\n                percentage >= 80 \n                  ? \"bg-green-500\" \n                  : percentage >= 60 \n                    ? \"bg-yellow-500\" \n                    : \"bg-red-500\"\n              }`}\n              style={{ width: `${percentage}%` }}\n            ></div>\n          </div>\n          \n          <div className=\"text-center mt-8\">\n            <button\n              onClick={logout}\n              className=\"px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors duration-200\"\n            >\n              Terminer\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizResults;","import React, { useEffect, useRef } from \"react\";\nimport { useQuiz } from \"../context/QuizContext\";\nimport { useAuth } from \"../context/AuthContext\";\nimport QuestionCard from \"./QuestionCard\";\nimport QuizNavigation from \"./QuizNavigation\";\nimport QuizResults from \"./QuizResults\";\nimport { QuizStatus } from \"../types\";\nimport { toast, Toaster } from 'react-hot-toast';\n\nconst Quiz: React.FC = () => {\n  // Utilisation de type assertion pour résoudre les erreurs TypeScript\n  const { appState } = useAuth() as any;\n  const { \n    questions, \n    currentQuestionIndex, \n    quizStatus,\n    timer,\n    startQuiz, \n    reportCheatingAttempt \n  } = useQuiz() as any;\n  \n  // Référence pour le div d'alerte personnalisé\n  const alertRef = useRef<HTMLDivElement>(null);\n  // Référence pour suivre si une triche a été détectée\n  const cheatingDetectedRef = useRef<boolean>(false);\n\n  // Create audio element for alert sound\n  const alertSound = new Audio('https://assets.mixkit.co/active_storage/sfx/2869/2869-preview.mp3');\n  \n  // Start the quiz when the component mounts\n  useEffect(() => {\n    if (quizStatus === QuizStatus.NOT_STARTED) {\n      startQuiz();\n    }\n    \n    // Afficher une alerte de test après 5 secondes pour vérifier que l'alerte fonctionne\n    const testTimeout = setTimeout(() => {\n      if (quizStatus === QuizStatus.IN_PROGRESS) {\n        console.log(\"Test d'alerte après 5 secondes\");\n        showCustomAlert('⚠️ TEST ALERTE ⚠️\\n\\nCeci est un test pour vérifier que l\\'alerte fonctionne correctement.');\n      }\n    }, 5000);\n    \n    return () => clearTimeout(testTimeout);\n  }, [quizStatus, startQuiz]);\n  \n  // Fonction pour afficher une alerte personnalisée en rouge\n  const showCustomAlert = (message: string) => {\n    console.log(\"Affichage de l'alerte personnalisée:\", message);\n    \n    // Supprimer toute alerte existante\n    if (alertRef.current && document.body.contains(alertRef.current)) {\n      document.body.removeChild(alertRef.current);\n      alertRef.current = null;\n    }\n    \n    // Créer un div d'alerte rouge\n    const alertDiv = document.createElement('div');\n    alertDiv.style.position = 'fixed';\n    alertDiv.style.top = '0';\n    alertDiv.style.left = '0';\n    alertDiv.style.width = '100%';\n    alertDiv.style.height = '100%';\n    alertDiv.style.backgroundColor = 'rgba(255, 0, 0, 0.9)';\n    alertDiv.style.color = 'white';\n    alertDiv.style.display = 'flex';\n    alertDiv.style.flexDirection = 'column';\n    alertDiv.style.justifyContent = 'center';\n    alertDiv.style.alignItems = 'center';\n    alertDiv.style.zIndex = '99999';\n    alertDiv.style.fontWeight = 'bold';\n    alertDiv.style.fontSize = '24px';\n    alertDiv.style.textAlign = 'center';\n    alertDiv.style.padding = '20px';\n    \n    // Créer le contenu de l'alerte\n    const messageElement = document.createElement('div');\n    messageElement.innerHTML = message.replace(/\\n/g, '<br>');\n    messageElement.style.marginBottom = '30px';\n    \n    // Ajouter un bouton pour fermer l'alerte\n    const closeButton = document.createElement('button');\n    closeButton.textContent = 'FERMER';\n    closeButton.style.padding = '12px 24px';\n    closeButton.style.backgroundColor = 'white';\n    closeButton.style.color = 'red';\n    closeButton.style.border = 'none';\n    closeButton.style.borderRadius = '5px';\n    closeButton.style.fontWeight = 'bold';\n    closeButton.style.fontSize = '18px';\n    closeButton.style.cursor = 'pointer';\n    closeButton.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.3)';\n    \n    closeButton.onclick = () => {\n      if (alertRef.current && document.body.contains(alertRef.current)) {\n        document.body.removeChild(alertRef.current);\n        alertRef.current = null;\n      }\n    };\n    \n    alertDiv.appendChild(messageElement);\n    alertDiv.appendChild(closeButton);\n    \n    document.body.appendChild(alertDiv);\n    alertRef.current = alertDiv;\n    \n    // Jouer un son d'alerte\n    alertSound.play().catch(err => console.error('Erreur lors de la lecture du son:', err));\n  };\n  \n  // Fonction pour détecter la triche (changement d'onglet)\n  const detectCheating = () => {\n    console.log(\"Triche détectée! Visibilité:\", document.visibilityState);\n    \n    // Marquer qu'une triche a été détectée\n    cheatingDetectedRef.current = true;\n    \n    // Signaler la tentative de triche\n    reportCheatingAttempt();\n    \n    // Afficher l'alerte rouge en plein écran\n    showCustomAlert('⚠️ ALERTE DE SÉCURITÉ ⚠️\\n\\nTENTATIVE DE TRICHE DÉTECTÉE !\\n\\nCet incident a été enregistré et sera signalé à l\\'administration.\\n\\nVotre session est surveillée.');\n    \n    // Afficher également un toast\n    toast.error('⚠️ TENTATIVE DE TRICHE DÉTECTÉE !', {\n      duration: 120000, // 2 minutes\n      position: 'top-center',\n      style: {\n        background: '#fee2e2',\n        color: '#991b1b',\n        fontWeight: 'bold',\n        fontSize: '1.1em',\n        padding: '16px',\n        border: '2px solid #dc2626',\n        zIndex: 9999\n      },\n      icon: '⚠️',\n    });\n  };\n  \n  // Set up visibility change detection for anti-cheating\n  useEffect(() => {\n    console.log(\"Configuration de la détection de changement d'onglet\");\n    \n    const handleVisibilityChange = () => {\n      console.log(\"Changement de visibilité détecté:\", document.visibilityState);\n      \n      if (document.visibilityState === \"hidden\" && quizStatus === QuizStatus.IN_PROGRESS) {\n        console.log(\"Tentative de triche détectée - changement d'onglet\");\n        detectCheating();\n      }\n    };\n    \n    // Ajouter un gestionnaire pour le changement de focus de fenêtre\n    const handleBlur = () => {\n      console.log(\"Événement blur détecté\");\n      if (quizStatus === QuizStatus.IN_PROGRESS) {\n        console.log(\"Tentative de triche détectée - perte de focus\");\n        detectCheating();\n      }\n    };\n    \n    // Utiliser plusieurs méthodes pour détecter les changements d'onglet\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    window.addEventListener(\"blur\", handleBlur);\n    \n    // Vérification périodique de la visibilité\n    const intervalCheck = setInterval(() => {\n      if (document.visibilityState === \"hidden\" && quizStatus === QuizStatus.IN_PROGRESS) {\n        console.log(\"Tentative de triche détectée - vérification périodique\");\n        detectCheating();\n      }\n    }, 2000);\n    \n    return () => {\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n      window.removeEventListener(\"blur\", handleBlur);\n      clearInterval(intervalCheck);\n      \n      // Nettoyer l'alerte personnalisée si elle existe\n      if (alertRef.current && document.body.contains(alertRef.current)) {\n        document.body.removeChild(alertRef.current);\n        alertRef.current = null;\n      }\n    };\n  }, [quizStatus, reportCheatingAttempt, alertSound]);\n  \n  // Showing results if quiz is completed\n  if (quizStatus === QuizStatus.COMPLETED) {\n    return <QuizResults />;\n  }\n  \n  // Loading state while quiz initializes\n  if (questions.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Chargement des questions...</p>\n        </div>\n      </div>\n    );\n  }\n  \n  const currentQuestion = questions[currentQuestionIndex];\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8 px-4\">\n      <Toaster\n        position=\"top-center\"\n        toastOptions={{\n          duration: 5000,\n          style: {\n            zIndex: 9999,\n          },\n        }}\n      />\n      <div className=\"max-w-3xl mx-auto\">\n        <header className=\"mb-8\">\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-2xl font-bold text-gray-800\">\n              Quiz: Virtualization Cloud & Datacenter\n            </h1>\n            <div className=\"flex items-center gap-4\">\n              <div className={`text-lg font-semibold ${\n                timer.minutes < 30 ? 'text-red-600' : 'text-gray-600'\n              }`}>\n                Temps restant: {String(timer.minutes).padStart(2, '0')}:{String(timer.seconds).padStart(2, '0')}\n              </div>\n              <div className=\"text-gray-600\">\n                {appState.currentUser?.name}\n              </div>\n            </div>\n          </div>\n        </header>\n        \n        {/* Bouton de test pour déclencher l'alerte manuellement */}\n        <button \n          onClick={() => detectCheating()} \n          className=\"mb-4 bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded\"\n        >\n          Tester l'alerte de triche\n        </button>\n        \n        <QuestionCard question={currentQuestion} />\n        <QuizNavigation />\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase().trim();\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({\n      color = \"currentColor\",\n      size = 24,\n      strokeWidth = 2,\n      absoluteStrokeWidth,\n      className = \"\",\n      children,\n      ...rest\n    }, ref) => {\n      return createElement(\n        \"svg\",\n        {\n          ref,\n          ...defaultAttributes,\n          width: size,\n          height: size,\n          stroke: color,\n          strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n          className: [\"lucide\", `lucide-${toKebabCase(iconName)}`, className].join(\" \"),\n          ...rest\n        },\n        [\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...Array.isArray(children) ? children : [children]\n        ]\n      );\n    }\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default, toKebabCase };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Clock = createLucideIcon(\"Clock\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"polyline\", { points: \"12 6 12 12 16 14\", key: \"68esgv\" }]\n]);\n\nexport { Clock as default };\n//# sourceMappingURL=clock.js.map\n","import React, { useEffect, useState } from \"react\";\nimport { useQuiz } from \"../context/QuizContext\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { Timer, QuizResult } from \"../types\";\nimport { Clock } from \"lucide-react\";\n\n// Déclaration pour TypeScript - permet d'accéder à window.supabase\ndeclare global {\n  interface Window {\n    supabase: any;\n  }\n}\n\n// Interface pour les étudiants actifs\ninterface ActiveStudent {\n  id?: string;\n  student_id: string;\n  student_name: string;\n  status: 'connected' | 'in_progress' | 'completed';\n  cheating_attempts: number;\n  connected_at: string;\n  last_activity: string;\n}\n\nconst AdminDashboard: React.FC = () => {\n  const { quizResults: contextQuizResults, timer } = useQuiz() as any;\n  const { logout } = useAuth() as any;\n  const [quizResults, setQuizResults] = useState<QuizResult[]>([]);\n  const [activeStudents, setActiveStudents] = useState<ActiveStudent[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n  const [supabaseAvailable, setSupabaseAvailable] = useState<boolean>(true);\n  \n  // Référence au client Supabase initialisé dans index.html\n  const supabase = window.supabase;\n  \n  // Récupération des résultats depuis Supabase et mise en place de l'abonnement temps réel\n  useEffect(() => {\n    // Initialisation avec les résultats du contexte pour un affichage immédiat\n    setQuizResults(contextQuizResults || []);\n    \n    // Vérifier si Supabase est disponible\n    const checkSupabaseConnection = async () => {\n      try {\n        // Tenter une requête simple pour vérifier la connexion\n        const { error } = await supabase\n          .from('quiz_results')\n          .select('count(*)', { count: 'exact', head: true })\n          .limit(1);\n          \n        if (error) {\n          console.warn('Problème de connexion à Supabase:', error);\n          setSupabaseAvailable(false);\n          setError(\"Impossible de se connecter à la base de données. Affichage des données locales uniquement.\");\n        } else {\n          console.log('Connexion à Supabase établie');\n          setSupabaseAvailable(true);\n        }\n      } catch (err) {\n        console.error('Erreur lors de la vérification de la connexion Supabase:', err);\n        setSupabaseAvailable(false);\n        setError(\"Erreur de connexion à la base de données. Affichage des données locales uniquement.\");\n      }\n    };\n    \n    checkSupabaseConnection();\n    \n    // Récupération des résultats depuis Supabase\n    const fetchQuizResults = async () => {\n      if (!supabaseAvailable) return;\n      \n      try {\n        const { data, error } = await supabase\n          .from('quiz_results')\n          .select('*');\n          \n        if (error) {\n          console.error('Erreur lors de la récupération des résultats:', error);\n          return;\n        }\n        \n        if (data) {\n          setQuizResults(prevResults => {\n            // Fusionner les résultats locaux et ceux de Supabase en évitant les doublons\n            const existingIds = new Set(prevResults.map(r => r.studentId));\n            const newResults = data.filter(r => !existingIds.has(r.studentId));\n            return [...prevResults, ...newResults];\n          });\n        }\n      } catch (err) {\n        console.error('Erreur inattendue:', err);\n      }\n    };\n    \n    // Récupération des étudiants actifs\n    const fetchActiveStudents = async () => {\n      try {\n        setLoading(true);\n        \n        if (!supabaseAvailable) {\n          setLoading(false);\n          return;\n        }\n        \n        // Tenter de récupérer les étudiants actifs\n        const { data, error } = await supabase\n          .from('active_students')\n          .select('*');\n          \n        if (error) {\n          console.error('Erreur lors de la récupération des étudiants actifs:', error);\n          setError(\"Impossible de récupérer les étudiants actifs. Veuillez créer la table manuellement dans Supabase.\");\n          setLoading(false);\n          return;\n        }\n        \n        if (data) {\n          setActiveStudents(data);\n          setError(null);\n        }\n      } catch (err) {\n        console.error('Erreur inattendue:', err);\n        setError(\"Une erreur inattendue s'est produite. Veuillez rafraîchir la page.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchQuizResults();\n    fetchActiveStudents();\n    \n    // Mise en place de l'abonnement temps réel pour les nouveaux résultats\n    let resultsSubscription: any;\n    \n    if (supabaseAvailable) {\n      resultsSubscription = supabase\n        .channel('public:quiz_results')\n        .on('INSERT', (payload: { new: QuizResult }) => {\n          console.log('Nouveau résultat reçu:', payload.new);\n          setQuizResults((currentResults) => [...currentResults, payload.new]);\n        })\n        .subscribe();\n    }\n    \n    // Mise en place de l'abonnement temps réel pour les étudiants actifs\n    let studentsSubscription: any;\n    \n    if (supabaseAvailable) {\n      studentsSubscription = supabase\n        .channel('public:active_students')\n        .on('INSERT', (payload: { new: ActiveStudent }) => {\n          console.log('Nouvel étudiant connecté:', payload.new);\n          setActiveStudents((current) => [payload.new, ...current]);\n        })\n        .on('UPDATE', (payload: { new: ActiveStudent }) => {\n          console.log('Mise à jour étudiant:', payload.new);\n          setActiveStudents((current) => \n            current.map(student => \n              student.student_id === payload.new.student_id ? payload.new : student\n            )\n          );\n        })\n        .subscribe();\n    }\n      \n    // Nettoyage des abonnements à la destruction du composant\n    return () => {\n      if (resultsSubscription) {\n        resultsSubscription.unsubscribe();\n      }\n      if (studentsSubscription) {\n        studentsSubscription.unsubscribe();\n      }\n    };\n  }, [contextQuizResults]);\n  \n  // Fonction pour signaler une tentative de triche pour un étudiant spécifique\n  const reportCheatingForStudent = async (studentId: string) => {\n    try {\n      if (!supabaseAvailable) {\n        // Mise à jour locale\n        setActiveStudents(current => \n          current.map(student => {\n            if (student.student_id === studentId) {\n              return {\n                ...student,\n                cheating_attempts: (student.cheating_attempts || 0) + 1\n              };\n            }\n            return student;\n          })\n        );\n        return;\n      }\n      \n      // Mettre à jour le nombre de tentatives de triche dans Supabase\n      const { data, error } = await supabase\n        .from('active_students')\n        .select('cheating_attempts')\n        .eq('student_id', studentId)\n        .single();\n        \n      if (error) {\n        console.error('Erreur lors de la récupération des tentatives de triche:', error);\n        return;\n      }\n      \n      const updatedCheatingAttempts = (data?.cheating_attempts || 0) + 1;\n      \n      await supabase\n        .from('active_students')\n        .update({ cheating_attempts: updatedCheatingAttempts })\n        .eq('student_id', studentId);\n        \n      console.log(`Tentative de triche signalée pour l'étudiant ${studentId}`);\n    } catch (err) {\n      console.error('Erreur lors du signalement de triche:', err);\n    }\n  };\n  \n  const averageScore = quizResults.length > 0\n    ? quizResults.reduce((sum: number, result: QuizResult) => sum + result.score, 0) / quizResults.length\n    : 0;\n  \n  const sortedResults = [...quizResults].sort((a: QuizResult, b: QuizResult) => b.score - a.score);\n\n  const formatTimer = (timer: Timer) => {\n    return `${String(timer.minutes).padStart(2, '0')}:${String(timer.seconds).padStart(2, '0')}`;\n  };\n  \n  // Fonction pour obtenir la classe CSS en fonction du statut\n  const getStatusClass = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return 'bg-blue-100 text-blue-800';\n      case 'in_progress':\n        return 'bg-green-100 text-green-800';\n      case 'completed':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  \n  // Fonction pour formater la date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleString('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n  \n  // Fonction pour calculer le temps écoulé depuis la dernière activité\n  const getTimeElapsed = (lastActivity: string) => {\n    const lastActivityTime = new Date(lastActivity).getTime();\n    const now = new Date().getTime();\n    const diffInSeconds = Math.floor((now - lastActivityTime) / 1000);\n    \n    if (diffInSeconds < 60) {\n      return `${diffInSeconds} sec`;\n    } else if (diffInSeconds < 3600) {\n      return `${Math.floor(diffInSeconds / 60)} min`;\n    } else {\n      return `${Math.floor(diffInSeconds / 3600)} h ${Math.floor((diffInSeconds % 3600) / 60)} min`;\n    }\n  };\n  \n  // Fonction pour convertir le score sur 20\n  const convertToScore20 = (score: number, maxScore: number) => {\n    return (score / maxScore) * 20;\n  };\n  \n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8 px-4\">\n      <div className=\"max-w-6xl mx-auto\">\n        <header className=\"mb-8 flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">\n              Tableau de bord administrateur\n            </h1>\n            <div className=\"flex items-center gap-2 text-gray-600\">\n              <Clock className=\"w-5 h-5\" />\n              <span>Temps restant: {formatTimer(timer)}</span>\n            </div>\n          </div>\n          <button\n            onClick={logout}\n            className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300 transition-colors duration-200\"\n          >\n            Déconnexion\n          </button>\n        </header>\n        \n        {error && (\n          <div className=\"mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\n            <p className=\"text-yellow-700\">{error}</p>\n            <p className=\"text-sm text-yellow-600 mt-2\">\n              Pour résoudre ce problème, veuillez exécuter le script SQL dans l'éditeur SQL de Supabase :\n              <br />\n              <code className=\"bg-yellow-100 px-2 py-1 rounded\">scripts/create_active_students_manual.sql</code>\n            </p>\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Étudiants connectés</h2>\n            <p className=\"text-3xl font-bold text-blue-600\">{activeStudents.length}</p>\n          </div>\n          \n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Note moyenne</h2>\n            <p className=\"text-3xl font-bold text-blue-600\">{averageScore.toFixed(1)}/20</p>\n          </div>\n          \n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Tentatives de triche</h2>\n            <p className=\"text-3xl font-bold text-red-600\">\n              {activeStudents.reduce((sum, student) => sum + (student.cheating_attempts || 0), 0)}\n            </p>\n          </div>\n        </div>\n        \n        {/* Section des résultats des étudiants */}\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden mb-8\">\n          <div className=\"p-6 border-b\">\n            <h2 className=\"text-xl font-semibold text-gray-800\">Résultats des étudiants</h2>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Nom\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Note\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Pourcentage\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Triche\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Date\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {sortedResults.map((result: QuizResult) => {\n                  const scorePercentage = (result.score / result.maxScore) * 100;\n                  const scoreOn20 = convertToScore20(result.score, result.maxScore);\n                  const dateFormatted = new Date(result.completedAt).toLocaleString();\n                  \n                  return (\n                    <tr key={result.studentId} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-gray-900\">{result.studentName}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className={`text-sm font-medium ${\n                          scorePercentage >= 80 ? \"text-green-600\" :\n                          scorePercentage >= 60 ? \"text-yellow-600\" : \"text-red-600\"\n                        }`}>\n                          {scoreOn20.toFixed(1)}/20\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">{scorePercentage.toFixed(1)}%</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className={`text-sm ${\n                          result.cheatingAttempts > 0 ? \"text-red-600 font-medium\" : \"text-gray-500\"\n                        }`}>\n                          {result.cheatingAttempts}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {dateFormatted}\n                      </td>\n                    </tr>\n                  );\n                })}\n                \n                {quizResults.length === 0 && (\n                  <tr>\n                    <td colSpan={5} className=\"px-6 py-4 text-center text-sm text-gray-500\">\n                      Aucun résultat disponible\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        \n        {/* Section des étudiants actifs */}\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n          <div className=\"p-6 border-b\">\n            <h2 className=\"text-xl font-semibold text-gray-800\">Étudiants connectés</h2>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            {loading ? (\n              <div className=\"p-6 text-center\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n                <p className=\"text-gray-600\">Chargement des données...</p>\n              </div>\n            ) : (\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Nom\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Statut\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Tentatives de triche\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Connecté à\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Dernière activité\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {activeStudents.map((student) => (\n                    <tr key={student.id || student.student_id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm font-medium text-gray-900\">{student.student_name}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusClass(student.status)}`}>\n                          {student.status === 'connected' ? 'Connecté' : \n                           student.status === 'in_progress' ? 'En cours d\\'examen' : 'Terminé'}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className={`text-sm ${\n                          student.cheating_attempts > 0 ? \"text-red-600 font-medium\" : \"text-gray-500\"\n                        }`}>\n                          {student.cheating_attempts}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {formatDate(student.connected_at)}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {getTimeElapsed(student.last_activity)} ({formatDate(student.last_activity)})\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        <button\n                          onClick={() => reportCheatingForStudent(student.student_id)}\n                          className=\"text-red-600 hover:text-red-900 mr-2\"\n                        >\n                          Signaler triche\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                  \n                  {activeStudents.length === 0 && (\n                    <tr>\n                      <td colSpan={6} className=\"px-6 py-4 text-center text-sm text-gray-500\">\n                        {error ? \n                          \"Impossible d'afficher les étudiants connectés. Veuillez créer la table manuellement.\" : \n                          \"Aucun étudiant connecté\"}\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;","import React from 'react';\nimport { useAuth } from './context/AuthContext';\nimport Login from './components/Login';\nimport Quiz from './components/Quiz';\nimport AdminDashboard from './components/AdminDashboard';\nimport { QuizProvider } from './context/QuizContext';\n\nfunction App() {\n  const { appState } = useAuth();\n\n  // If not authenticated, show login\n  if (!appState.isAuthenticated) {\n    return <Login />;\n  }\n\n  // If authenticated and admin, show admin dashboard wrapped in QuizProvider\n  if (appState.isAdmin) {\n    return (\n      <QuizProvider>\n        <AdminDashboard />\n      </QuizProvider>\n    );\n  }\n\n  // If authenticated and not admin, show quiz\n  return (\n    <QuizProvider>\n      <Quiz />\n    </QuizProvider>\n  );\n}\n\nexport default App;","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\nimport { AuthProvider } from './context/AuthContext';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </StrictMode>\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","defaultState","completedQuizzes","activeStudents","AuthContext","createContext","useAuth","useContext","AuthProvider","children","appState","setAppState","useState","supabaseAvailable","setSupabaseAvailable","supabase","useEffect","response","err","checkIfStudentHasCompleted","studentName","data","error","studentData","registerStudentInSupabase","student","isAdmin","updateResponse","insertResponse","updateStudentStatus","status","hasCompleted","login","name","trimmedName","toast","logout","jsx","Login","setName","adminCode","setAdminCode","showAdminField","setShowAdminField","handleSubmit","jsxs","QuizStatus","questions","getRandomizedQuestions","shuffledQuestions","i","j","EmailJSResponseStatus","_status","_text","createWebStorage","key","value","store","buildOptions","options","init","origin","opts","sendPost","url","headers","message","responseStatus","validateParams","publicKey","serviceID","templateID","validateTemplateParams","templateParams","isHeadless","navigator","headlessError","validateBlockListParams","list","watchVariable","isBlockListDisabled","_a","getValue","isBlockedValueInParams","params","blockedEmailError","validateLimitRateParams","throttle","id","getLeftTime","storage","lastTime","isLimitRateHit","defaultID","limitRateError","send","blockHeadless","storageProvider","blockList","limitRate","validateForm","form","findHTMLForm","sendForm","currentForm","formData","emailjs","QuizContext","useQuiz","QuizProvider","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","quizStatus","setQuizStatus","cheatingAttempts","setCheatingAttempts","quizResults","setQuizResults","timer","setTimer","sendEmailNotification","result","interval","prevTimer","endQuiz","startQuiz","randomizedQuestions","score","calculateScore","prev","answerQuestion","questionId","answerIndex","goToNextQuestion","goToPreviousQuestion","correctAnswers","question","reportCheatingAttempt","QuestionCard","selectedAnswer","handleOptionSelect","optionIndex","option","index","QuizNavigation","isFirstQuestion","isLastQuestion","progress","QuizResults","totalPossibleScore","percentage","getScoreColor","Quiz","alertRef","useRef","cheatingDetectedRef","alertSound","testTimeout","showCustomAlert","alertDiv","messageElement","closeButton","detectCheating","handleVisibilityChange","handleBlur","intervalCheck","currentQuestion","Toaster","defaultAttributes","toKebabCase","string","createLucideIcon","iconName","iconNode","Component","forwardRef","color","size","strokeWidth","absoluteStrokeWidth","className","rest","ref","createElement","tag","attrs","Clock","AdminDashboard","contextQuizResults","setActiveStudents","loading","setLoading","setError","fetchQuizResults","prevResults","existingIds","r","newResults","fetchActiveStudents","resultsSubscription","payload","currentResults","studentsSubscription","current","reportCheatingForStudent","studentId","updatedCheatingAttempts","averageScore","sum","sortedResults","formatTimer","getStatusClass","formatDate","dateString","getTimeElapsed","lastActivity","lastActivityTime","now","diffInSeconds","convertToScore20","maxScore","scorePercentage","scoreOn20","dateFormatted","App","StrictMode"],"mappings":"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CE,GAAI,KACJ,KAAM,wDACN,QAAS,CACP,sEACA,wFACA,4CACA,8DACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,KACJ,KAAM,mGACN,QAAS,CACP,gGACA,wDACA,sEACA,yCACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,KACJ,KAAM,gFACN,QAAS,CACP,4EACA,6CACA,4DACA,2DACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,KACJ,KAAM,mGACN,QAAS,CACP,OACA,OACA,OACA,MACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,KACJ,KAAM,gIACN,QAAS,CACP,gBACA,aACA,gBACA,cACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,KACJ,KAAM,4EACN,QAAS,CACP,eACA,cACA,gBACA,qBACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,KACJ,KAAM,sCACN,QAAS,CACP,uCACA,yHACA,uDACA,yCACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,uDACN,QAAS,CACP,KACA,MACA,MACA,QACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,oFACN,QAAS,CACP,gBACA,4BACA,yBACA,mBACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,oFACN,QAAS,CACP,uDACA,wDACA,mDACA,2DACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,6EACN,QAAS,CACP,qBACA,gBACA,aACA,YACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,2CACN,QAAS,CACP,8DACA,6DACA,0EACA,qEACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,qFACN,QAAS,CACP,YACA,cACA,cACA,eACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,oEACN,QAAS,CACP,gGACA,iCACA,iDACA,sCACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,wCACN,QAAS,CACP,6BACA,+EACA,wCACA,kCACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,uDACN,QAAS,CACP,gEACA,qDACA,8CACA,yDACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,kJACN,QAAS,CACP,cACA,YACA,aACA,SACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,oDACN,QAAS,CACP,8CACA,yBACA,yBACA,+BACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,yCACN,QAAS,CACP,uEACA,sCACA,+CACA,yDACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,yGACN,QAAS,CACP,aACA,cACA,aACA,aACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,8FACN,QAAS,CACP,kCACA,mCACA,gBACA,qBACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,4DACN,QAAS,CACP,0DACA,8DACA,sEACA,sCACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,mGACN,QAAS,CACP,mCACA,oCACA,gCACA,+BACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,uDACN,QAAS,CACP,kFACA,qCACA,8BACA,kCACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,mCACN,QAAS,CACP,qEACA,+BACA,oCACA,2BACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,wGACN,QAAS,CACP,MACA,8BACA,uCACA,MACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,iDACN,QAAS,CACP,+CACA,6DACA,iCACA,2CACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,+FACN,QAAS,CACP,QACA,OACA,MACA,MACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,gDACN,QAAS,CACP,kFACA,2CACA,0CACA,kCACF,EACA,cAAe,CACjB,EACA,CACE,GAAI,MACJ,KAAM,iGACN,QAAS,CACP,MACA,iCACA,gCACA,gBACF,EACA,cAAe,CACjB,EACA,CACE,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","x_google_ignoreList":[0,1,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,34]}